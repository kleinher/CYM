
Reloj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000093a  000009ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000093a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800110  00800110  000009de  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00000a50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a00  00000000  00000000  00000bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad8  00000000  00000000  000025c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f48  00000000  00000000  000030a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b0  00000000  00000000  00003fe8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006a4  00000000  00000000  00004398  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001184  00000000  00000000  00004a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005bc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 80 00 	jmp	0x100	; 0x100 <__vector_16>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>

00000068 <LcdCustomChar>:
  68:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
  78:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
  88:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
  98:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d8 e0       	ldi	r29, 0x08	; 8
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	ea e3       	ldi	r30, 0x3A	; 58
  bc:	f9 e0       	ldi	r31, 0x09	; 9
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
  c0:	05 90       	lpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a0 31       	cpi	r26, 0x10	; 16
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	a0 e1       	ldi	r26, 0x10	; 16
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a7 31       	cpi	r26, 0x17	; 23
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 1f 03 	call	0x63e	; 0x63e <main>
  de:	0c 94 9b 04 	jmp	0x936	; 0x936 <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <setupTimer>:
 */ 
#include <avr/io.h>		
#include <avr/interrupt.h>

void setupTimer(){
	DDRB=0b00100000;//PB5 como salida
  e6:	80 e2       	ldi	r24, 0x20	; 32
  e8:	84 b9       	out	0x04, r24	; 4
	TCCR0B=(1<<CS02)|(1<<CS00);//configurar el registro del timer0 como temporizador con prescalador de 1024
  ea:	85 e0       	ldi	r24, 0x05	; 5
  ec:	85 bd       	out	0x25, r24	; 37
	TCNT0=99;//el registro empieza con valor 99
  ee:	83 e6       	ldi	r24, 0x63	; 99
  f0:	86 bd       	out	0x26, r24	; 38
	TIMSK0|= (1<<TOIE0);//habilita la interrupcion por desbordamiento del timer0
  f2:	ee e6       	ldi	r30, 0x6E	; 110
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	81 60       	ori	r24, 0x01	; 1
  fa:	80 83       	st	Z, r24
	sei();//habilita interrupciones globales
  fc:	78 94       	sei
  fe:	08 95       	ret

00000100 <__vector_16>:
}

ISR(TIMER0_OVF_vect)
{
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	0f 92       	push	r0
 108:	11 24       	eor	r1, r1
 10a:	2f 93       	push	r18
 10c:	3f 93       	push	r19
 10e:	4f 93       	push	r20
 110:	5f 93       	push	r21
 112:	6f 93       	push	r22
 114:	7f 93       	push	r23
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
 11a:	af 93       	push	r26
 11c:	bf 93       	push	r27
 11e:	ef 93       	push	r30
 120:	ff 93       	push	r31
	uint8_t static cont=0;
	cont++;
 122:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 126:	8f 5f       	subi	r24, 0xFF	; 255
 128:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	if(cont==50){
 12c:	82 33       	cpi	r24, 0x32	; 50
 12e:	39 f4       	brne	.+14     	; 0x13e <__vector_16+0x3e>
		relojFuncion();
 130:	0e 94 3b 03 	call	0x676	; 0x676 <relojFuncion>
		TCNT2=99;//reinicio contador del timer0
 134:	83 e6       	ldi	r24, 0x63	; 99
 136:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7f80b2>
		cont=0;//reinicio contador
 13a:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
	}
	
}
 13e:	ff 91       	pop	r31
 140:	ef 91       	pop	r30
 142:	bf 91       	pop	r27
 144:	af 91       	pop	r26
 146:	9f 91       	pop	r25
 148:	8f 91       	pop	r24
 14a:	7f 91       	pop	r23
 14c:	6f 91       	pop	r22
 14e:	5f 91       	pop	r21
 150:	4f 91       	pop	r20
 152:	3f 91       	pop	r19
 154:	2f 91       	pop	r18
 156:	0f 90       	pop	r0
 158:	0f be       	out	0x3f, r0	; 63
 15a:	0f 90       	pop	r0
 15c:	1f 90       	pop	r1
 15e:	18 95       	reti

00000160 <LCDsendChar>:
 160:	65 b1       	in	r22, 0x05	; 5
 162:	98 2f       	mov	r25, r24
 164:	90 74       	andi	r25, 0x40	; 64
 166:	49 2f       	mov	r20, r25
 168:	50 e0       	ldi	r21, 0x00	; 0
 16a:	55 95       	asr	r21
 16c:	47 95       	ror	r20
 16e:	55 95       	asr	r21
 170:	47 95       	ror	r20
 172:	55 95       	asr	r21
 174:	47 95       	ror	r20
 176:	55 95       	asr	r21
 178:	47 95       	ror	r20
 17a:	98 2f       	mov	r25, r24
 17c:	90 78       	andi	r25, 0x80	; 128
 17e:	29 2f       	mov	r18, r25
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	02 2e       	mov	r0, r18
 184:	23 2f       	mov	r18, r19
 186:	00 0c       	add	r0, r0
 188:	22 1f       	adc	r18, r18
 18a:	33 0b       	sbc	r19, r19
 18c:	00 0c       	add	r0, r0
 18e:	22 1f       	adc	r18, r18
 190:	33 1f       	adc	r19, r19
 192:	96 2f       	mov	r25, r22
 194:	99 7f       	andi	r25, 0xF9	; 249
 196:	49 2b       	or	r20, r25
 198:	24 2b       	or	r18, r20
 19a:	25 b9       	out	0x05, r18	; 5
 19c:	68 b1       	in	r22, 0x08	; 8
 19e:	98 2f       	mov	r25, r24
 1a0:	90 71       	andi	r25, 0x10	; 16
 1a2:	49 2f       	mov	r20, r25
 1a4:	50 e0       	ldi	r21, 0x00	; 0
 1a6:	55 95       	asr	r21
 1a8:	47 95       	ror	r20
 1aa:	55 95       	asr	r21
 1ac:	47 95       	ror	r20
 1ae:	55 95       	asr	r21
 1b0:	47 95       	ror	r20
 1b2:	98 2f       	mov	r25, r24
 1b4:	90 72       	andi	r25, 0x20	; 32
 1b6:	29 2f       	mov	r18, r25
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	35 95       	asr	r19
 1bc:	27 95       	ror	r18
 1be:	35 95       	asr	r19
 1c0:	27 95       	ror	r18
 1c2:	35 95       	asr	r19
 1c4:	27 95       	ror	r18
 1c6:	96 2f       	mov	r25, r22
 1c8:	99 7f       	andi	r25, 0xF9	; 249
 1ca:	49 2b       	or	r20, r25
 1cc:	24 2b       	or	r18, r20
 1ce:	28 b9       	out	0x08, r18	; 8
 1d0:	9b b1       	in	r25, 0x0b	; 11
 1d2:	92 60       	ori	r25, 0x02	; 2
 1d4:	9b b9       	out	0x0b, r25	; 11
 1d6:	9b b1       	in	r25, 0x0b	; 11
 1d8:	91 60       	ori	r25, 0x01	; 1
 1da:	9b b9       	out	0x0b, r25	; 11
 1dc:	25 ed       	ldi	r18, 0xD5	; 213
 1de:	2a 95       	dec	r18
 1e0:	f1 f7       	brne	.-4      	; 0x1de <LCDsendChar+0x7e>
 1e2:	00 00       	nop
 1e4:	9b b1       	in	r25, 0x0b	; 11
 1e6:	9e 7f       	andi	r25, 0xFE	; 254
 1e8:	9b b9       	out	0x0b, r25	; 11
 1ea:	9b b1       	in	r25, 0x0b	; 11
 1ec:	9d 7f       	andi	r25, 0xFD	; 253
 1ee:	9b b9       	out	0x0b, r25	; 11
 1f0:	95 ed       	ldi	r25, 0xD5	; 213
 1f2:	9a 95       	dec	r25
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCDsendChar+0x92>
 1f6:	00 00       	nop
 1f8:	65 b1       	in	r22, 0x05	; 5
 1fa:	20 e1       	ldi	r18, 0x10	; 16
 1fc:	82 9f       	mul	r24, r18
 1fe:	c0 01       	movw	r24, r0
 200:	11 24       	eor	r1, r1
 202:	ac 01       	movw	r20, r24
 204:	40 74       	andi	r20, 0x40	; 64
 206:	55 27       	eor	r21, r21
 208:	55 95       	asr	r21
 20a:	47 95       	ror	r20
 20c:	55 95       	asr	r21
 20e:	47 95       	ror	r20
 210:	55 95       	asr	r21
 212:	47 95       	ror	r20
 214:	55 95       	asr	r21
 216:	47 95       	ror	r20
 218:	9c 01       	movw	r18, r24
 21a:	20 78       	andi	r18, 0x80	; 128
 21c:	33 27       	eor	r19, r19
 21e:	02 2e       	mov	r0, r18
 220:	23 2f       	mov	r18, r19
 222:	00 0c       	add	r0, r0
 224:	22 1f       	adc	r18, r18
 226:	33 0b       	sbc	r19, r19
 228:	00 0c       	add	r0, r0
 22a:	22 1f       	adc	r18, r18
 22c:	33 1f       	adc	r19, r19
 22e:	36 2f       	mov	r19, r22
 230:	39 7f       	andi	r19, 0xF9	; 249
 232:	43 2b       	or	r20, r19
 234:	24 2b       	or	r18, r20
 236:	25 b9       	out	0x05, r18	; 5
 238:	48 b1       	in	r20, 0x08	; 8
 23a:	9c 01       	movw	r18, r24
 23c:	20 71       	andi	r18, 0x10	; 16
 23e:	33 27       	eor	r19, r19
 240:	35 95       	asr	r19
 242:	27 95       	ror	r18
 244:	35 95       	asr	r19
 246:	27 95       	ror	r18
 248:	35 95       	asr	r19
 24a:	27 95       	ror	r18
 24c:	80 72       	andi	r24, 0x20	; 32
 24e:	99 27       	eor	r25, r25
 250:	95 95       	asr	r25
 252:	87 95       	ror	r24
 254:	95 95       	asr	r25
 256:	87 95       	ror	r24
 258:	95 95       	asr	r25
 25a:	87 95       	ror	r24
 25c:	94 2f       	mov	r25, r20
 25e:	99 7f       	andi	r25, 0xF9	; 249
 260:	29 2b       	or	r18, r25
 262:	82 2b       	or	r24, r18
 264:	88 b9       	out	0x08, r24	; 8
 266:	8b b1       	in	r24, 0x0b	; 11
 268:	82 60       	ori	r24, 0x02	; 2
 26a:	8b b9       	out	0x0b, r24	; 11
 26c:	8b b1       	in	r24, 0x0b	; 11
 26e:	81 60       	ori	r24, 0x01	; 1
 270:	8b b9       	out	0x0b, r24	; 11
 272:	85 ed       	ldi	r24, 0xD5	; 213
 274:	8a 95       	dec	r24
 276:	f1 f7       	brne	.-4      	; 0x274 <LCDsendChar+0x114>
 278:	00 00       	nop
 27a:	8b b1       	in	r24, 0x0b	; 11
 27c:	8e 7f       	andi	r24, 0xFE	; 254
 27e:	8b b9       	out	0x0b, r24	; 11
 280:	8b b1       	in	r24, 0x0b	; 11
 282:	8d 7f       	andi	r24, 0xFD	; 253
 284:	8b b9       	out	0x0b, r24	; 11
 286:	95 ed       	ldi	r25, 0xD5	; 213
 288:	9a 95       	dec	r25
 28a:	f1 f7       	brne	.-4      	; 0x288 <LCDsendChar+0x128>
 28c:	00 00       	nop
 28e:	08 95       	ret

00000290 <LCDsendCommand>:
 290:	65 b1       	in	r22, 0x05	; 5
 292:	98 2f       	mov	r25, r24
 294:	90 74       	andi	r25, 0x40	; 64
 296:	49 2f       	mov	r20, r25
 298:	50 e0       	ldi	r21, 0x00	; 0
 29a:	55 95       	asr	r21
 29c:	47 95       	ror	r20
 29e:	55 95       	asr	r21
 2a0:	47 95       	ror	r20
 2a2:	55 95       	asr	r21
 2a4:	47 95       	ror	r20
 2a6:	55 95       	asr	r21
 2a8:	47 95       	ror	r20
 2aa:	98 2f       	mov	r25, r24
 2ac:	90 78       	andi	r25, 0x80	; 128
 2ae:	29 2f       	mov	r18, r25
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	02 2e       	mov	r0, r18
 2b4:	23 2f       	mov	r18, r19
 2b6:	00 0c       	add	r0, r0
 2b8:	22 1f       	adc	r18, r18
 2ba:	33 0b       	sbc	r19, r19
 2bc:	00 0c       	add	r0, r0
 2be:	22 1f       	adc	r18, r18
 2c0:	33 1f       	adc	r19, r19
 2c2:	96 2f       	mov	r25, r22
 2c4:	99 7f       	andi	r25, 0xF9	; 249
 2c6:	49 2b       	or	r20, r25
 2c8:	24 2b       	or	r18, r20
 2ca:	25 b9       	out	0x05, r18	; 5
 2cc:	68 b1       	in	r22, 0x08	; 8
 2ce:	98 2f       	mov	r25, r24
 2d0:	90 71       	andi	r25, 0x10	; 16
 2d2:	49 2f       	mov	r20, r25
 2d4:	50 e0       	ldi	r21, 0x00	; 0
 2d6:	55 95       	asr	r21
 2d8:	47 95       	ror	r20
 2da:	55 95       	asr	r21
 2dc:	47 95       	ror	r20
 2de:	55 95       	asr	r21
 2e0:	47 95       	ror	r20
 2e2:	98 2f       	mov	r25, r24
 2e4:	90 72       	andi	r25, 0x20	; 32
 2e6:	29 2f       	mov	r18, r25
 2e8:	30 e0       	ldi	r19, 0x00	; 0
 2ea:	35 95       	asr	r19
 2ec:	27 95       	ror	r18
 2ee:	35 95       	asr	r19
 2f0:	27 95       	ror	r18
 2f2:	35 95       	asr	r19
 2f4:	27 95       	ror	r18
 2f6:	96 2f       	mov	r25, r22
 2f8:	99 7f       	andi	r25, 0xF9	; 249
 2fa:	49 2b       	or	r20, r25
 2fc:	24 2b       	or	r18, r20
 2fe:	28 b9       	out	0x08, r18	; 8
 300:	9b b1       	in	r25, 0x0b	; 11
 302:	91 60       	ori	r25, 0x01	; 1
 304:	9b b9       	out	0x0b, r25	; 11
 306:	ef e9       	ldi	r30, 0x9F	; 159
 308:	ff e0       	ldi	r31, 0x0F	; 15
 30a:	31 97       	sbiw	r30, 0x01	; 1
 30c:	f1 f7       	brne	.-4      	; 0x30a <LCDsendCommand+0x7a>
 30e:	00 c0       	rjmp	.+0      	; 0x310 <LCDsendCommand+0x80>
 310:	00 00       	nop
 312:	9b b1       	in	r25, 0x0b	; 11
 314:	9e 7f       	andi	r25, 0xFE	; 254
 316:	9b b9       	out	0x0b, r25	; 11
 318:	ef e9       	ldi	r30, 0x9F	; 159
 31a:	ff e0       	ldi	r31, 0x0F	; 15
 31c:	31 97       	sbiw	r30, 0x01	; 1
 31e:	f1 f7       	brne	.-4      	; 0x31c <LCDsendCommand+0x8c>
 320:	00 c0       	rjmp	.+0      	; 0x322 <LCDsendCommand+0x92>
 322:	00 00       	nop
 324:	65 b1       	in	r22, 0x05	; 5
 326:	f0 e1       	ldi	r31, 0x10	; 16
 328:	8f 9f       	mul	r24, r31
 32a:	c0 01       	movw	r24, r0
 32c:	11 24       	eor	r1, r1
 32e:	ac 01       	movw	r20, r24
 330:	40 74       	andi	r20, 0x40	; 64
 332:	55 27       	eor	r21, r21
 334:	55 95       	asr	r21
 336:	47 95       	ror	r20
 338:	55 95       	asr	r21
 33a:	47 95       	ror	r20
 33c:	55 95       	asr	r21
 33e:	47 95       	ror	r20
 340:	55 95       	asr	r21
 342:	47 95       	ror	r20
 344:	9c 01       	movw	r18, r24
 346:	20 78       	andi	r18, 0x80	; 128
 348:	33 27       	eor	r19, r19
 34a:	02 2e       	mov	r0, r18
 34c:	23 2f       	mov	r18, r19
 34e:	00 0c       	add	r0, r0
 350:	22 1f       	adc	r18, r18
 352:	33 0b       	sbc	r19, r19
 354:	00 0c       	add	r0, r0
 356:	22 1f       	adc	r18, r18
 358:	33 1f       	adc	r19, r19
 35a:	36 2f       	mov	r19, r22
 35c:	39 7f       	andi	r19, 0xF9	; 249
 35e:	43 2b       	or	r20, r19
 360:	24 2b       	or	r18, r20
 362:	25 b9       	out	0x05, r18	; 5
 364:	48 b1       	in	r20, 0x08	; 8
 366:	9c 01       	movw	r18, r24
 368:	20 71       	andi	r18, 0x10	; 16
 36a:	33 27       	eor	r19, r19
 36c:	35 95       	asr	r19
 36e:	27 95       	ror	r18
 370:	35 95       	asr	r19
 372:	27 95       	ror	r18
 374:	35 95       	asr	r19
 376:	27 95       	ror	r18
 378:	80 72       	andi	r24, 0x20	; 32
 37a:	99 27       	eor	r25, r25
 37c:	95 95       	asr	r25
 37e:	87 95       	ror	r24
 380:	95 95       	asr	r25
 382:	87 95       	ror	r24
 384:	95 95       	asr	r25
 386:	87 95       	ror	r24
 388:	94 2f       	mov	r25, r20
 38a:	99 7f       	andi	r25, 0xF9	; 249
 38c:	29 2b       	or	r18, r25
 38e:	82 2b       	or	r24, r18
 390:	88 b9       	out	0x08, r24	; 8
 392:	8b b1       	in	r24, 0x0b	; 11
 394:	81 60       	ori	r24, 0x01	; 1
 396:	8b b9       	out	0x0b, r24	; 11
 398:	8f e9       	ldi	r24, 0x9F	; 159
 39a:	9f e0       	ldi	r25, 0x0F	; 15
 39c:	01 97       	sbiw	r24, 0x01	; 1
 39e:	f1 f7       	brne	.-4      	; 0x39c <LCDsendCommand+0x10c>
 3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <LCDsendCommand+0x112>
 3a2:	00 00       	nop
 3a4:	8b b1       	in	r24, 0x0b	; 11
 3a6:	8e 7f       	andi	r24, 0xFE	; 254
 3a8:	8b b9       	out	0x0b, r24	; 11
 3aa:	ef e9       	ldi	r30, 0x9F	; 159
 3ac:	ff e0       	ldi	r31, 0x0F	; 15
 3ae:	31 97       	sbiw	r30, 0x01	; 1
 3b0:	f1 f7       	brne	.-4      	; 0x3ae <LCDsendCommand+0x11e>
 3b2:	00 c0       	rjmp	.+0      	; 0x3b4 <LCDsendCommand+0x124>
 3b4:	00 00       	nop
 3b6:	08 95       	ret

000003b8 <LCDclr>:
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	0e 94 48 01 	call	0x290	; 0x290 <LCDsendCommand>
 3be:	08 95       	ret

000003c0 <LCDstring>:
 3c0:	0f 93       	push	r16
 3c2:	1f 93       	push	r17
 3c4:	cf 93       	push	r28
 3c6:	df 93       	push	r29
 3c8:	00 97       	sbiw	r24, 0x00	; 0
 3ca:	89 f0       	breq	.+34     	; 0x3ee <LCDstring+0x2e>
 3cc:	d6 2f       	mov	r29, r22
 3ce:	8c 01       	movw	r16, r24
 3d0:	c0 e0       	ldi	r28, 0x00	; 0
 3d2:	0b c0       	rjmp	.+22     	; 0x3ea <LCDstring+0x2a>
 3d4:	f8 01       	movw	r30, r16
 3d6:	ec 0f       	add	r30, r28
 3d8:	f1 1d       	adc	r31, r1
 3da:	80 81       	ld	r24, Z
 3dc:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 3e0:	8a e6       	ldi	r24, 0x6A	; 106
 3e2:	8a 95       	dec	r24
 3e4:	f1 f7       	brne	.-4      	; 0x3e2 <LCDstring+0x22>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <LCDstring+0x28>
 3e8:	cf 5f       	subi	r28, 0xFF	; 255
 3ea:	cd 17       	cp	r28, r29
 3ec:	98 f3       	brcs	.-26     	; 0x3d4 <LCDstring+0x14>
 3ee:	df 91       	pop	r29
 3f0:	cf 91       	pop	r28
 3f2:	1f 91       	pop	r17
 3f4:	0f 91       	pop	r16
 3f6:	08 95       	ret

000003f8 <LCDGotoXY>:
 3f8:	62 30       	cpi	r22, 0x02	; 2
 3fa:	31 f0       	breq	.+12     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3fc:	63 30       	cpi	r22, 0x03	; 3
 3fe:	31 f0       	breq	.+12     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 400:	61 30       	cpi	r22, 0x01	; 1
 402:	29 f4       	brne	.+10     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 404:	80 5c       	subi	r24, 0xC0	; 192
 406:	03 c0       	rjmp	.+6      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 408:	8c 5e       	subi	r24, 0xEC	; 236
 40a:	01 c0       	rjmp	.+2      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40c:	8c 5a       	subi	r24, 0xAC	; 172
 40e:	80 68       	ori	r24, 0x80	; 128
 410:	0e 94 48 01 	call	0x290	; 0x290 <LCDsendCommand>
 414:	08 95       	ret

00000416 <LCDdefinechar>:
 416:	ef 92       	push	r14
 418:	ff 92       	push	r15
 41a:	0f 93       	push	r16
 41c:	1f 93       	push	r17
 41e:	cf 93       	push	r28
 420:	df 93       	push	r29
 422:	7c 01       	movw	r14, r24
 424:	86 2f       	mov	r24, r22
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	88 0f       	add	r24, r24
 42a:	99 1f       	adc	r25, r25
 42c:	88 0f       	add	r24, r24
 42e:	99 1f       	adc	r25, r25
 430:	88 0f       	add	r24, r24
 432:	99 1f       	adc	r25, r25
 434:	80 64       	ori	r24, 0x40	; 64
 436:	c0 e0       	ldi	r28, 0x00	; 0
 438:	d0 e0       	ldi	r29, 0x00	; 0
 43a:	0d c0       	rjmp	.+26     	; 0x456 <LCDdefinechar+0x40>
 43c:	f7 01       	movw	r30, r14
 43e:	ec 0f       	add	r30, r28
 440:	fd 1f       	adc	r31, r29
 442:	14 91       	lpm	r17, Z
 444:	01 e0       	ldi	r16, 0x01	; 1
 446:	08 0f       	add	r16, r24
 448:	0e 94 48 01 	call	0x290	; 0x290 <LCDsendCommand>
 44c:	81 2f       	mov	r24, r17
 44e:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 452:	21 96       	adiw	r28, 0x01	; 1
 454:	80 2f       	mov	r24, r16
 456:	c8 30       	cpi	r28, 0x08	; 8
 458:	d1 05       	cpc	r29, r1
 45a:	80 f3       	brcs	.-32     	; 0x43c <LCDdefinechar+0x26>
 45c:	df 91       	pop	r29
 45e:	cf 91       	pop	r28
 460:	1f 91       	pop	r17
 462:	0f 91       	pop	r16
 464:	ff 90       	pop	r15
 466:	ef 90       	pop	r14
 468:	08 95       	ret

0000046a <LCDinit>:
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	8f e5       	ldi	r24, 0x5F	; 95
 470:	9a ee       	ldi	r25, 0xEA	; 234
 472:	01 97       	sbiw	r24, 0x01	; 1
 474:	f1 f7       	brne	.-4      	; 0x472 <LCDinit+0x8>
 476:	00 c0       	rjmp	.+0      	; 0x478 <LCDinit+0xe>
 478:	00 00       	nop
 47a:	85 b1       	in	r24, 0x05	; 5
 47c:	89 7f       	andi	r24, 0xF9	; 249
 47e:	85 b9       	out	0x05, r24	; 5
 480:	88 b1       	in	r24, 0x08	; 8
 482:	89 7f       	andi	r24, 0xF9	; 249
 484:	88 b9       	out	0x08, r24	; 8
 486:	1b b8       	out	0x0b, r1	; 11
 488:	87 b1       	in	r24, 0x07	; 7
 48a:	86 60       	ori	r24, 0x06	; 6
 48c:	87 b9       	out	0x07, r24	; 7
 48e:	84 b1       	in	r24, 0x04	; 4
 490:	86 60       	ori	r24, 0x06	; 6
 492:	84 b9       	out	0x04, r24	; 4
 494:	84 b1       	in	r24, 0x04	; 4
 496:	86 60       	ori	r24, 0x06	; 6
 498:	84 b9       	out	0x04, r24	; 4
 49a:	87 b1       	in	r24, 0x07	; 7
 49c:	86 60       	ori	r24, 0x06	; 6
 49e:	87 b9       	out	0x07, r24	; 7
 4a0:	8a b1       	in	r24, 0x0a	; 10
 4a2:	83 60       	ori	r24, 0x03	; 3
 4a4:	8a b9       	out	0x0a, r24	; 10
 4a6:	85 b1       	in	r24, 0x05	; 5
 4a8:	89 7f       	andi	r24, 0xF9	; 249
 4aa:	85 b9       	out	0x05, r24	; 5
 4ac:	88 b1       	in	r24, 0x08	; 8
 4ae:	86 60       	ori	r24, 0x06	; 6
 4b0:	88 b9       	out	0x08, r24	; 8
 4b2:	8b b1       	in	r24, 0x0b	; 11
 4b4:	81 60       	ori	r24, 0x01	; 1
 4b6:	8b b9       	out	0x0b, r24	; 11
 4b8:	8f e9       	ldi	r24, 0x9F	; 159
 4ba:	9f e0       	ldi	r25, 0x0F	; 15
 4bc:	01 97       	sbiw	r24, 0x01	; 1
 4be:	f1 f7       	brne	.-4      	; 0x4bc <LCDinit+0x52>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <LCDinit+0x58>
 4c2:	00 00       	nop
 4c4:	8b b1       	in	r24, 0x0b	; 11
 4c6:	8e 7f       	andi	r24, 0xFE	; 254
 4c8:	8b b9       	out	0x0b, r24	; 11
 4ca:	8f e9       	ldi	r24, 0x9F	; 159
 4cc:	9f e0       	ldi	r25, 0x0F	; 15
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <LCDinit+0x64>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <LCDinit+0x6a>
 4d4:	00 00       	nop
 4d6:	85 b1       	in	r24, 0x05	; 5
 4d8:	89 7f       	andi	r24, 0xF9	; 249
 4da:	85 b9       	out	0x05, r24	; 5
 4dc:	88 b1       	in	r24, 0x08	; 8
 4de:	86 60       	ori	r24, 0x06	; 6
 4e0:	88 b9       	out	0x08, r24	; 8
 4e2:	8b b1       	in	r24, 0x0b	; 11
 4e4:	81 60       	ori	r24, 0x01	; 1
 4e6:	8b b9       	out	0x0b, r24	; 11
 4e8:	8f e9       	ldi	r24, 0x9F	; 159
 4ea:	9f e0       	ldi	r25, 0x0F	; 15
 4ec:	01 97       	sbiw	r24, 0x01	; 1
 4ee:	f1 f7       	brne	.-4      	; 0x4ec <LCDinit+0x82>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <LCDinit+0x88>
 4f2:	00 00       	nop
 4f4:	8b b1       	in	r24, 0x0b	; 11
 4f6:	8e 7f       	andi	r24, 0xFE	; 254
 4f8:	8b b9       	out	0x0b, r24	; 11
 4fa:	8f e9       	ldi	r24, 0x9F	; 159
 4fc:	9f e0       	ldi	r25, 0x0F	; 15
 4fe:	01 97       	sbiw	r24, 0x01	; 1
 500:	f1 f7       	brne	.-4      	; 0x4fe <LCDinit+0x94>
 502:	00 c0       	rjmp	.+0      	; 0x504 <LCDinit+0x9a>
 504:	00 00       	nop
 506:	85 b1       	in	r24, 0x05	; 5
 508:	89 7f       	andi	r24, 0xF9	; 249
 50a:	85 b9       	out	0x05, r24	; 5
 50c:	88 b1       	in	r24, 0x08	; 8
 50e:	89 7f       	andi	r24, 0xF9	; 249
 510:	84 60       	ori	r24, 0x04	; 4
 512:	88 b9       	out	0x08, r24	; 8
 514:	8b b1       	in	r24, 0x0b	; 11
 516:	81 60       	ori	r24, 0x01	; 1
 518:	8b b9       	out	0x0b, r24	; 11
 51a:	8f e9       	ldi	r24, 0x9F	; 159
 51c:	9f e0       	ldi	r25, 0x0F	; 15
 51e:	01 97       	sbiw	r24, 0x01	; 1
 520:	f1 f7       	brne	.-4      	; 0x51e <LCDinit+0xb4>
 522:	00 c0       	rjmp	.+0      	; 0x524 <LCDinit+0xba>
 524:	00 00       	nop
 526:	8b b1       	in	r24, 0x0b	; 11
 528:	8e 7f       	andi	r24, 0xFE	; 254
 52a:	8b b9       	out	0x0b, r24	; 11
 52c:	8f e9       	ldi	r24, 0x9F	; 159
 52e:	9f e0       	ldi	r25, 0x0F	; 15
 530:	01 97       	sbiw	r24, 0x01	; 1
 532:	f1 f7       	brne	.-4      	; 0x530 <LCDinit+0xc6>
 534:	00 c0       	rjmp	.+0      	; 0x536 <LCDinit+0xcc>
 536:	00 00       	nop
 538:	88 e2       	ldi	r24, 0x28	; 40
 53a:	0e 94 48 01 	call	0x290	; 0x290 <LCDsendCommand>
 53e:	8c e0       	ldi	r24, 0x0C	; 12
 540:	0e 94 48 01 	call	0x290	; 0x290 <LCDsendCommand>
 544:	60 e0       	ldi	r22, 0x00	; 0
 546:	c0 e0       	ldi	r28, 0x00	; 0
 548:	0a c0       	rjmp	.+20     	; 0x55e <LCDinit+0xf4>
 54a:	d1 e0       	ldi	r29, 0x01	; 1
 54c:	d6 0f       	add	r29, r22
 54e:	8c 2f       	mov	r24, r28
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	88 59       	subi	r24, 0x98	; 152
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	0e 94 0b 02 	call	0x416	; 0x416 <LCDdefinechar>
 55a:	c8 5f       	subi	r28, 0xF8	; 248
 55c:	6d 2f       	mov	r22, r29
 55e:	c0 34       	cpi	r28, 0x40	; 64
 560:	a0 f3       	brcs	.-24     	; 0x54a <LCDinit+0xe0>
 562:	df 91       	pop	r29
 564:	cf 91       	pop	r28
 566:	08 95       	ret

00000568 <LCDcursorOFF>:
 568:	8c e0       	ldi	r24, 0x0C	; 12
 56a:	0e 94 48 01 	call	0x290	; 0x290 <LCDsendCommand>
 56e:	08 95       	ret

00000570 <LCDescribeDato>:
 570:	ef 92       	push	r14
 572:	ff 92       	push	r15
 574:	0f 93       	push	r16
 576:	1f 93       	push	r17
 578:	cf 93       	push	r28
 57a:	df 93       	push	r29
 57c:	00 d0       	rcall	.+0      	; 0x57e <LCDescribeDato+0xe>
 57e:	00 d0       	rcall	.+0      	; 0x580 <LCDescribeDato+0x10>
 580:	1f 92       	push	r1
 582:	cd b7       	in	r28, 0x3d	; 61
 584:	de b7       	in	r29, 0x3e	; 62
 586:	7b 01       	movw	r14, r22
 588:	fe 01       	movw	r30, r28
 58a:	31 96       	adiw	r30, 0x01	; 1
 58c:	25 e0       	ldi	r18, 0x05	; 5
 58e:	df 01       	movw	r26, r30
 590:	1d 92       	st	X+, r1
 592:	2a 95       	dec	r18
 594:	e9 f7       	brne	.-6      	; 0x590 <LCDescribeDato+0x20>
 596:	24 e0       	ldi	r18, 0x04	; 4
 598:	30 e0       	ldi	r19, 0x00	; 0
 59a:	0f c0       	rjmp	.+30     	; 0x5ba <LCDescribeDato+0x4a>
 59c:	6a e0       	ldi	r22, 0x0A	; 10
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__divmodhi4>
 5a4:	e1 e0       	ldi	r30, 0x01	; 1
 5a6:	f0 e0       	ldi	r31, 0x00	; 0
 5a8:	ec 0f       	add	r30, r28
 5aa:	fd 1f       	adc	r31, r29
 5ac:	e2 0f       	add	r30, r18
 5ae:	f3 1f       	adc	r31, r19
 5b0:	80 83       	st	Z, r24
 5b2:	86 2f       	mov	r24, r22
 5b4:	97 2f       	mov	r25, r23
 5b6:	21 50       	subi	r18, 0x01	; 1
 5b8:	31 09       	sbc	r19, r1
 5ba:	00 97       	sbiw	r24, 0x00	; 0
 5bc:	79 f7       	brne	.-34     	; 0x59c <LCDescribeDato+0x2c>
 5be:	bf ef       	ldi	r27, 0xFF	; 255
 5c0:	eb 16       	cp	r14, r27
 5c2:	fb 06       	cpc	r15, r27
 5c4:	81 f4       	brne	.+32     	; 0x5e6 <LCDescribeDato+0x76>
 5c6:	03 c0       	rjmp	.+6      	; 0x5ce <LCDescribeDato+0x5e>
 5c8:	0f 5f       	subi	r16, 0xFF	; 255
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <LCDescribeDato+0x62>
 5ce:	00 e0       	ldi	r16, 0x00	; 0
 5d0:	10 e0       	ldi	r17, 0x00	; 0
 5d2:	e1 e0       	ldi	r30, 0x01	; 1
 5d4:	f0 e0       	ldi	r31, 0x00	; 0
 5d6:	ec 0f       	add	r30, r28
 5d8:	fd 1f       	adc	r31, r29
 5da:	e0 0f       	add	r30, r16
 5dc:	f1 1f       	adc	r31, r17
 5de:	20 81       	ld	r18, Z
 5e0:	22 23       	and	r18, r18
 5e2:	91 f3       	breq	.-28     	; 0x5c8 <LCDescribeDato+0x58>
 5e4:	04 c0       	rjmp	.+8      	; 0x5ee <LCDescribeDato+0x7e>
 5e6:	05 e0       	ldi	r16, 0x05	; 5
 5e8:	10 e0       	ldi	r17, 0x00	; 0
 5ea:	0e 19       	sub	r16, r14
 5ec:	1f 09       	sbc	r17, r15
 5ee:	99 23       	and	r25, r25
 5f0:	84 f4       	brge	.+32     	; 0x612 <LCDescribeDato+0xa2>
 5f2:	8d e2       	ldi	r24, 0x2D	; 45
 5f4:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 5f8:	0c c0       	rjmp	.+24     	; 0x612 <LCDescribeDato+0xa2>
 5fa:	e1 e0       	ldi	r30, 0x01	; 1
 5fc:	f0 e0       	ldi	r31, 0x00	; 0
 5fe:	ec 0f       	add	r30, r28
 600:	fd 1f       	adc	r31, r29
 602:	e0 0f       	add	r30, r16
 604:	f1 1f       	adc	r31, r17
 606:	80 81       	ld	r24, Z
 608:	80 5d       	subi	r24, 0xD0	; 208
 60a:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 60e:	0f 5f       	subi	r16, 0xFF	; 255
 610:	1f 4f       	sbci	r17, 0xFF	; 255
 612:	05 30       	cpi	r16, 0x05	; 5
 614:	11 05       	cpc	r17, r1
 616:	8c f3       	brlt	.-30     	; 0x5fa <LCDescribeDato+0x8a>
 618:	0f 90       	pop	r0
 61a:	0f 90       	pop	r0
 61c:	0f 90       	pop	r0
 61e:	0f 90       	pop	r0
 620:	0f 90       	pop	r0
 622:	df 91       	pop	r29
 624:	cf 91       	pop	r28
 626:	1f 91       	pop	r17
 628:	0f 91       	pop	r16
 62a:	ff 90       	pop	r15
 62c:	ef 90       	pop	r14
 62e:	08 95       	ret

00000630 <setupLCD>:
		actualizar_MEF();
    }
}
/*SETUP DE LA PANTALLA LCD*/
void setupLCD(){
	LCDinit();
 630:	0e 94 35 02 	call	0x46a	; 0x46a <LCDinit>
	LCDclr();
 634:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LCDclr>
	LCDcursorOFF();
 638:	0e 94 b4 02 	call	0x568	; 0x568 <LCDcursorOFF>
 63c:	08 95       	ret

0000063e <main>:
#include "main.h"

int main(void)
{
    /* Replace with your application code */
	setupTimer();
 63e:	0e 94 73 00 	call	0xe6	; 0xe6 <setupTimer>
	setupLCD();
 642:	0e 94 18 03 	call	0x630	; 0x630 <setupLCD>
	iniciar_MEF();
 646:	0e 94 b1 03 	call	0x762	; 0x762 <iniciar_MEF>
	while (1) 
    {
		actualizar_MEF();
 64a:	0e 94 5e 04 	call	0x8bc	; 0x8bc <actualizar_MEF>
 64e:	fd cf       	rjmp	.-6      	; 0x64a <main+0xc>

00000650 <not_leap>:
			else t_Parcial.second++;
		}
		else{
			if(t_Parcial.second==0)
			t_Parcial.second=59;
			else t_Parcial.second--;
 650:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <t+0x5>
 654:	64 e6       	ldi	r22, 0x64	; 100
 656:	0e 94 67 04 	call	0x8ce	; 0x8ce <__udivmodqi4>
 65a:	91 11       	cpse	r25, r1
 65c:	08 c0       	rjmp	.+16     	; 0x66e <not_leap+0x1e>
 65e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <t+0x5>
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	60 e9       	ldi	r22, 0x90	; 144
 666:	71 e0       	ldi	r23, 0x01	; 1
 668:	0e 94 73 04 	call	0x8e6	; 0x8e6 <__divmodhi4>
 66c:	08 95       	ret
 66e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <t+0x5>
 672:	83 70       	andi	r24, 0x03	; 3
 674:	08 95       	ret

00000676 <relojFuncion>:
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <FlagLcd>
 67c:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <FlagCambio>
 680:	91 11       	cpse	r25, r1
 682:	80 e0       	ldi	r24, 0x00	; 0
 684:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <FlagCambio>
 688:	e6 e0       	ldi	r30, 0x06	; 6
 68a:	f1 e0       	ldi	r31, 0x01	; 1
 68c:	80 81       	ld	r24, Z
 68e:	8f 5f       	subi	r24, 0xFF	; 255
 690:	80 83       	st	Z, r24
 692:	8c 33       	cpi	r24, 0x3C	; 60
 694:	09 f0       	breq	.+2      	; 0x698 <relojFuncion+0x22>
 696:	64 c0       	rjmp	.+200    	; 0x760 <relojFuncion+0xea>
 698:	10 82       	st	Z, r1
 69a:	81 81       	ldd	r24, Z+1	; 0x01
 69c:	8f 5f       	subi	r24, 0xFF	; 255
 69e:	81 83       	std	Z+1, r24	; 0x01
 6a0:	8c 33       	cpi	r24, 0x3C	; 60
 6a2:	09 f0       	breq	.+2      	; 0x6a6 <relojFuncion+0x30>
 6a4:	5d c0       	rjmp	.+186    	; 0x760 <relojFuncion+0xea>
 6a6:	11 82       	std	Z+1, r1	; 0x01
 6a8:	82 81       	ldd	r24, Z+2	; 0x02
 6aa:	8f 5f       	subi	r24, 0xFF	; 255
 6ac:	82 83       	std	Z+2, r24	; 0x02
 6ae:	88 31       	cpi	r24, 0x18	; 24
 6b0:	09 f0       	breq	.+2      	; 0x6b4 <relojFuncion+0x3e>
 6b2:	56 c0       	rjmp	.+172    	; 0x760 <relojFuncion+0xea>
 6b4:	12 82       	std	Z+2, r1	; 0x02
 6b6:	83 81       	ldd	r24, Z+3	; 0x03
 6b8:	8f 5f       	subi	r24, 0xFF	; 255
 6ba:	83 83       	std	Z+3, r24	; 0x03
 6bc:	80 32       	cpi	r24, 0x20	; 32
 6be:	31 f4       	brne	.+12     	; 0x6cc <relojFuncion+0x56>
 6c0:	84 81       	ldd	r24, Z+4	; 0x04
 6c2:	8f 5f       	subi	r24, 0xFF	; 255
 6c4:	84 83       	std	Z+4, r24	; 0x04
 6c6:	81 e0       	ldi	r24, 0x01	; 1
 6c8:	83 83       	std	Z+3, r24	; 0x03
 6ca:	3f c0       	rjmp	.+126    	; 0x74a <relojFuncion+0xd4>
 6cc:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <t+0x3>
 6d0:	8f 31       	cpi	r24, 0x1F	; 31
 6d2:	c1 f4       	brne	.+48     	; 0x704 <relojFuncion+0x8e>
 6d4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t+0x4>
 6d8:	84 30       	cpi	r24, 0x04	; 4
 6da:	61 f0       	breq	.+24     	; 0x6f4 <relojFuncion+0x7e>
 6dc:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t+0x4>
 6e0:	86 30       	cpi	r24, 0x06	; 6
 6e2:	41 f0       	breq	.+16     	; 0x6f4 <relojFuncion+0x7e>
 6e4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t+0x4>
 6e8:	89 30       	cpi	r24, 0x09	; 9
 6ea:	21 f0       	breq	.+8      	; 0x6f4 <relojFuncion+0x7e>
 6ec:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t+0x4>
 6f0:	8b 30       	cpi	r24, 0x0B	; 11
 6f2:	59 f5       	brne	.+86     	; 0x74a <relojFuncion+0xd4>
 6f4:	e6 e0       	ldi	r30, 0x06	; 6
 6f6:	f1 e0       	ldi	r31, 0x01	; 1
 6f8:	84 81       	ldd	r24, Z+4	; 0x04
 6fa:	8f 5f       	subi	r24, 0xFF	; 255
 6fc:	84 83       	std	Z+4, r24	; 0x04
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	83 83       	std	Z+3, r24	; 0x03
 702:	23 c0       	rjmp	.+70     	; 0x74a <relojFuncion+0xd4>
 704:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <t+0x3>
 708:	8e 31       	cpi	r24, 0x1E	; 30
 70a:	61 f4       	brne	.+24     	; 0x724 <relojFuncion+0xae>
 70c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t+0x4>
 710:	82 30       	cpi	r24, 0x02	; 2
 712:	d9 f4       	brne	.+54     	; 0x74a <relojFuncion+0xd4>
 714:	e6 e0       	ldi	r30, 0x06	; 6
 716:	f1 e0       	ldi	r31, 0x01	; 1
 718:	84 81       	ldd	r24, Z+4	; 0x04
 71a:	8f 5f       	subi	r24, 0xFF	; 255
 71c:	84 83       	std	Z+4, r24	; 0x04
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	83 83       	std	Z+3, r24	; 0x03
 722:	13 c0       	rjmp	.+38     	; 0x74a <relojFuncion+0xd4>
 724:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <t+0x3>
 728:	8d 31       	cpi	r24, 0x1D	; 29
 72a:	79 f4       	brne	.+30     	; 0x74a <relojFuncion+0xd4>
 72c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t+0x4>
 730:	82 30       	cpi	r24, 0x02	; 2
 732:	59 f4       	brne	.+22     	; 0x74a <relojFuncion+0xd4>
 734:	0e 94 28 03 	call	0x650	; 0x650 <not_leap>
 738:	88 23       	and	r24, r24
 73a:	39 f0       	breq	.+14     	; 0x74a <relojFuncion+0xd4>
 73c:	e6 e0       	ldi	r30, 0x06	; 6
 73e:	f1 e0       	ldi	r31, 0x01	; 1
 740:	84 81       	ldd	r24, Z+4	; 0x04
 742:	8f 5f       	subi	r24, 0xFF	; 255
 744:	84 83       	std	Z+4, r24	; 0x04
 746:	81 e0       	ldi	r24, 0x01	; 1
 748:	83 83       	std	Z+3, r24	; 0x03
 74a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <t+0x4>
 74e:	8d 30       	cpi	r24, 0x0D	; 13
 750:	39 f4       	brne	.+14     	; 0x760 <relojFuncion+0xea>
 752:	e6 e0       	ldi	r30, 0x06	; 6
 754:	f1 e0       	ldi	r31, 0x01	; 1
 756:	81 e0       	ldi	r24, 0x01	; 1
 758:	84 83       	std	Z+4, r24	; 0x04
 75a:	85 81       	ldd	r24, Z+5	; 0x05
 75c:	8f 5f       	subi	r24, 0xFF	; 255
 75e:	85 83       	std	Z+5, r24	; 0x05
 760:	08 95       	ret

00000762 <iniciar_MEF>:
 762:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <estado>
 766:	86 e0       	ldi	r24, 0x06	; 6
 768:	e6 e0       	ldi	r30, 0x06	; 6
 76a:	f1 e0       	ldi	r31, 0x01	; 1
 76c:	a0 e0       	ldi	r26, 0x00	; 0
 76e:	b1 e0       	ldi	r27, 0x01	; 1
 770:	01 90       	ld	r0, Z+
 772:	0d 92       	st	X+, r0
 774:	8a 95       	dec	r24
 776:	e1 f7       	brne	.-8      	; 0x770 <iniciar_MEF+0xe>
 778:	08 95       	ret

0000077a <actualizarTiempo>:
 77a:	cf 93       	push	r28
 77c:	df 93       	push	r29
 77e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <FlagLcd>
 782:	88 23       	and	r24, r24
 784:	e1 f1       	breq	.+120    	; 0x7fe <actualizarTiempo+0x84>
 786:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <FlagLcd>
 78a:	61 e0       	ldi	r22, 0x01	; 1
 78c:	84 e0       	ldi	r24, 0x04	; 4
 78e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <LCDGotoXY>
 792:	c6 e0       	ldi	r28, 0x06	; 6
 794:	d1 e0       	ldi	r29, 0x01	; 1
 796:	8b 81       	ldd	r24, Y+3	; 0x03
 798:	62 e0       	ldi	r22, 0x02	; 2
 79a:	70 e0       	ldi	r23, 0x00	; 0
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 7a2:	8f e2       	ldi	r24, 0x2F	; 47
 7a4:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 7a8:	8c 81       	ldd	r24, Y+4	; 0x04
 7aa:	62 e0       	ldi	r22, 0x02	; 2
 7ac:	70 e0       	ldi	r23, 0x00	; 0
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 7b4:	8f e2       	ldi	r24, 0x2F	; 47
 7b6:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 7ba:	8d 81       	ldd	r24, Y+5	; 0x05
 7bc:	62 e0       	ldi	r22, 0x02	; 2
 7be:	70 e0       	ldi	r23, 0x00	; 0
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 7c6:	60 e0       	ldi	r22, 0x00	; 0
 7c8:	84 e0       	ldi	r24, 0x04	; 4
 7ca:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <LCDGotoXY>
 7ce:	8a 81       	ldd	r24, Y+2	; 0x02
 7d0:	62 e0       	ldi	r22, 0x02	; 2
 7d2:	70 e0       	ldi	r23, 0x00	; 0
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 7da:	8a e3       	ldi	r24, 0x3A	; 58
 7dc:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 7e0:	89 81       	ldd	r24, Y+1	; 0x01
 7e2:	62 e0       	ldi	r22, 0x02	; 2
 7e4:	70 e0       	ldi	r23, 0x00	; 0
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 7ec:	8a e3       	ldi	r24, 0x3A	; 58
 7ee:	0e 94 b0 00 	call	0x160	; 0x160 <LCDsendChar>
 7f2:	88 81       	ld	r24, Y
 7f4:	62 e0       	ldi	r22, 0x02	; 2
 7f6:	70 e0       	ldi	r23, 0x00	; 0
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 7fe:	df 91       	pop	r29
 800:	cf 91       	pop	r28
 802:	08 95       	ret

00000804 <efecto_Apagado>:
	}
}


void efecto_Apagado(){
	if(FlagCursor){
 804:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <FlagCursor>
 808:	88 23       	and	r24, r24
 80a:	09 f4       	brne	.+2      	; 0x80e <efecto_Apagado+0xa>
 80c:	56 c0       	rjmp	.+172    	; 0x8ba <efecto_Apagado+0xb6>
		if(FlagCambio){
 80e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <FlagCambio>
 812:	88 23       	and	r24, r24
 814:	09 f4       	brne	.+2      	; 0x818 <efecto_Apagado+0x14>
 816:	46 c0       	rjmp	.+140    	; 0x8a4 <efecto_Apagado+0xa0>
			switch (posicion[0]){
 818:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <posicion>
 81c:	87 30       	cpi	r24, 0x07	; 7
 81e:	d1 f0       	breq	.+52     	; 0x854 <efecto_Apagado+0x50>
 820:	8a 30       	cpi	r24, 0x0A	; 10
 822:	21 f0       	breq	.+8      	; 0x82c <efecto_Apagado+0x28>
 824:	84 30       	cpi	r24, 0x04	; 4
 826:	09 f0       	breq	.+2      	; 0x82a <efecto_Apagado+0x26>
 828:	42 c0       	rjmp	.+132    	; 0x8ae <efecto_Apagado+0xaa>
 82a:	28 c0       	rjmp	.+80     	; 0x87c <efecto_Apagado+0x78>
				case ANO_SEGUNDO:
				if(!posicion[1])
 82c:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <posicion+0x1>
 830:	81 11       	cpse	r24, r1
 832:	08 c0       	rjmp	.+16     	; 0x844 <efecto_Apagado+0x40>
				LCDescribeDato(t_Parcial.second,2);
 834:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 838:	62 e0       	ldi	r22, 0x02	; 2
 83a:	70 e0       	ldi	r23, 0x00	; 0
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 842:	35 c0       	rjmp	.+106    	; 0x8ae <efecto_Apagado+0xaa>
				else LCDescribeDato(t_Parcial.year,2);
 844:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
 848:	62 e0       	ldi	r22, 0x02	; 2
 84a:	70 e0       	ldi	r23, 0x00	; 0
 84c:	90 e0       	ldi	r25, 0x00	; 0
 84e:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 852:	2d c0       	rjmp	.+90     	; 0x8ae <efecto_Apagado+0xaa>
				break;
				case MES_MINUTO:
				if(!posicion[1])
 854:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <posicion+0x1>
 858:	81 11       	cpse	r24, r1
 85a:	08 c0       	rjmp	.+16     	; 0x86c <efecto_Apagado+0x68>
				LCDescribeDato(t_Parcial.minute,2);
 85c:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 860:	62 e0       	ldi	r22, 0x02	; 2
 862:	70 e0       	ldi	r23, 0x00	; 0
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 86a:	21 c0       	rjmp	.+66     	; 0x8ae <efecto_Apagado+0xaa>
				else LCDescribeDato(t_Parcial.month,2);
 86c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
 870:	62 e0       	ldi	r22, 0x02	; 2
 872:	70 e0       	ldi	r23, 0x00	; 0
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 87a:	19 c0       	rjmp	.+50     	; 0x8ae <efecto_Apagado+0xaa>
				break;
				case DIA_HORA:
				if(!posicion[1])
 87c:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <posicion+0x1>
 880:	81 11       	cpse	r24, r1
 882:	08 c0       	rjmp	.+16     	; 0x894 <efecto_Apagado+0x90>
				LCDescribeDato(t_Parcial.hour,2);
 884:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 888:	62 e0       	ldi	r22, 0x02	; 2
 88a:	70 e0       	ldi	r23, 0x00	; 0
 88c:	90 e0       	ldi	r25, 0x00	; 0
 88e:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 892:	0d c0       	rjmp	.+26     	; 0x8ae <efecto_Apagado+0xaa>
				else LCDescribeDato(t_Parcial.date,2);
 894:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 898:	62 e0       	ldi	r22, 0x02	; 2
 89a:	70 e0       	ldi	r23, 0x00	; 0
 89c:	90 e0       	ldi	r25, 0x00	; 0
 89e:	0e 94 b8 02 	call	0x570	; 0x570 <LCDescribeDato>
 8a2:	05 c0       	rjmp	.+10     	; 0x8ae <efecto_Apagado+0xaa>
				break;
			}
		}
		else LCDstring((uint8_t*)"  ",2);
 8a4:	62 e0       	ldi	r22, 0x02	; 2
 8a6:	8c e0       	ldi	r24, 0x0C	; 12
 8a8:	91 e0       	ldi	r25, 0x01	; 1
 8aa:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <LCDstring>
		
		LCDGotoXY(posicion[0],posicion[1]);
 8ae:	e2 e1       	ldi	r30, 0x12	; 18
 8b0:	f1 e0       	ldi	r31, 0x01	; 1
 8b2:	61 81       	ldd	r22, Z+1	; 0x01
 8b4:	80 81       	ld	r24, Z
 8b6:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <LCDGotoXY>
 8ba:	08 95       	ret

000008bc <actualizar_MEF>:
}

void actualizar_MEF(){
	uint8_t key='#';

	efecto_Apagado();
 8bc:	0e 94 02 04 	call	0x804	; 0x804 <efecto_Apagado>
	switch (estado){
 8c0:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <estado>
 8c4:	81 11       	cpse	r24, r1
 8c6:	02 c0       	rjmp	.+4      	; 0x8cc <actualizar_MEF+0x10>
		case S0:
		switch (key){
			case 'A': t_Parcial=t; estado=S1; salidaA(1,ANO_SEGUNDO);
			break;
			case 'D': estado=S0; salidaD(1,ANO_SEGUNDO);
			default: actualizarTiempo();
 8c8:	0e 94 bd 03 	call	0x77a	; 0x77a <actualizarTiempo>
 8cc:	08 95       	ret

000008ce <__udivmodqi4>:
 8ce:	99 1b       	sub	r25, r25
 8d0:	79 e0       	ldi	r23, 0x09	; 9
 8d2:	04 c0       	rjmp	.+8      	; 0x8dc <__udivmodqi4_ep>

000008d4 <__udivmodqi4_loop>:
 8d4:	99 1f       	adc	r25, r25
 8d6:	96 17       	cp	r25, r22
 8d8:	08 f0       	brcs	.+2      	; 0x8dc <__udivmodqi4_ep>
 8da:	96 1b       	sub	r25, r22

000008dc <__udivmodqi4_ep>:
 8dc:	88 1f       	adc	r24, r24
 8de:	7a 95       	dec	r23
 8e0:	c9 f7       	brne	.-14     	; 0x8d4 <__udivmodqi4_loop>
 8e2:	80 95       	com	r24
 8e4:	08 95       	ret

000008e6 <__divmodhi4>:
 8e6:	97 fb       	bst	r25, 7
 8e8:	07 2e       	mov	r0, r23
 8ea:	16 f4       	brtc	.+4      	; 0x8f0 <__divmodhi4+0xa>
 8ec:	00 94       	com	r0
 8ee:	07 d0       	rcall	.+14     	; 0x8fe <__divmodhi4_neg1>
 8f0:	77 fd       	sbrc	r23, 7
 8f2:	09 d0       	rcall	.+18     	; 0x906 <__divmodhi4_neg2>
 8f4:	0e 94 87 04 	call	0x90e	; 0x90e <__udivmodhi4>
 8f8:	07 fc       	sbrc	r0, 7
 8fa:	05 d0       	rcall	.+10     	; 0x906 <__divmodhi4_neg2>
 8fc:	3e f4       	brtc	.+14     	; 0x90c <__divmodhi4_exit>

000008fe <__divmodhi4_neg1>:
 8fe:	90 95       	com	r25
 900:	81 95       	neg	r24
 902:	9f 4f       	sbci	r25, 0xFF	; 255
 904:	08 95       	ret

00000906 <__divmodhi4_neg2>:
 906:	70 95       	com	r23
 908:	61 95       	neg	r22
 90a:	7f 4f       	sbci	r23, 0xFF	; 255

0000090c <__divmodhi4_exit>:
 90c:	08 95       	ret

0000090e <__udivmodhi4>:
 90e:	aa 1b       	sub	r26, r26
 910:	bb 1b       	sub	r27, r27
 912:	51 e1       	ldi	r21, 0x11	; 17
 914:	07 c0       	rjmp	.+14     	; 0x924 <__udivmodhi4_ep>

00000916 <__udivmodhi4_loop>:
 916:	aa 1f       	adc	r26, r26
 918:	bb 1f       	adc	r27, r27
 91a:	a6 17       	cp	r26, r22
 91c:	b7 07       	cpc	r27, r23
 91e:	10 f0       	brcs	.+4      	; 0x924 <__udivmodhi4_ep>
 920:	a6 1b       	sub	r26, r22
 922:	b7 0b       	sbc	r27, r23

00000924 <__udivmodhi4_ep>:
 924:	88 1f       	adc	r24, r24
 926:	99 1f       	adc	r25, r25
 928:	5a 95       	dec	r21
 92a:	a9 f7       	brne	.-22     	; 0x916 <__udivmodhi4_loop>
 92c:	80 95       	com	r24
 92e:	90 95       	com	r25
 930:	bc 01       	movw	r22, r24
 932:	cd 01       	movw	r24, r26
 934:	08 95       	ret

00000936 <_exit>:
 936:	f8 94       	cli

00000938 <__stop_program>:
 938:	ff cf       	rjmp	.-2      	; 0x938 <__stop_program>
