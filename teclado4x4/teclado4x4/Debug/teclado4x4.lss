
teclado4x4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000518  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000548  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000588  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000142d  00000000  00000000  00000678  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000095a  00000000  00000000  00001aa5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000975  00000000  00000000  000023ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000027c  00000000  00000000  00002d74  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000058a  00000000  00000000  00002ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000f1c  00000000  00000000  0000357a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00004496  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>

00000068 <LcdCustomChar>:
  68:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
  78:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
  88:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
  98:	03 07 0f 1f 0f 07 03 00 18 1c 1e 1f 1e 1c 18 00     ................

000000a8 <__ctors_end>:
  a8:	11 24       	eor	r1, r1
  aa:	1f be       	out	0x3f, r1	; 63
  ac:	cf ef       	ldi	r28, 0xFF	; 255
  ae:	d8 e0       	ldi	r29, 0x08	; 8
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	cd bf       	out	0x3d, r28	; 61

000000b4 <__do_copy_data>:
  b4:	11 e0       	ldi	r17, 0x01	; 1
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b1 e0       	ldi	r27, 0x01	; 1
  ba:	e4 ec       	ldi	r30, 0xC4	; 196
  bc:	f4 e0       	ldi	r31, 0x04	; 4
  be:	02 c0       	rjmp	.+4      	; 0xc4 <__do_copy_data+0x10>
  c0:	05 90       	lpm	r0, Z+
  c2:	0d 92       	st	X+, r0
  c4:	a0 30       	cpi	r26, 0x00	; 0
  c6:	b1 07       	cpc	r27, r17
  c8:	d9 f7       	brne	.-10     	; 0xc0 <__do_copy_data+0xc>

000000ca <__do_clear_bss>:
  ca:	21 e0       	ldi	r18, 0x01	; 1
  cc:	a0 e0       	ldi	r26, 0x00	; 0
  ce:	b1 e0       	ldi	r27, 0x01	; 1
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a0 30       	cpi	r26, 0x00	; 0
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 54 02 	call	0x4a8	; 0x4a8 <main>
  de:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <LCDsendChar>:
		LCDsendCommand(0x18);
	}
}
void LCDcursorOn(void) //displays LCD cursor
{
	LCDsendCommand(0x0E);
  e6:	65 b1       	in	r22, 0x05	; 5
  e8:	98 2f       	mov	r25, r24
  ea:	90 74       	andi	r25, 0x40	; 64
  ec:	49 2f       	mov	r20, r25
  ee:	50 e0       	ldi	r21, 0x00	; 0
  f0:	55 95       	asr	r21
  f2:	47 95       	ror	r20
  f4:	55 95       	asr	r21
  f6:	47 95       	ror	r20
  f8:	55 95       	asr	r21
  fa:	47 95       	ror	r20
  fc:	55 95       	asr	r21
  fe:	47 95       	ror	r20
 100:	98 2f       	mov	r25, r24
 102:	90 78       	andi	r25, 0x80	; 128
 104:	29 2f       	mov	r18, r25
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	02 2e       	mov	r0, r18
 10a:	23 2f       	mov	r18, r19
 10c:	00 0c       	add	r0, r0
 10e:	22 1f       	adc	r18, r18
 110:	33 0b       	sbc	r19, r19
 112:	00 0c       	add	r0, r0
 114:	22 1f       	adc	r18, r18
 116:	33 1f       	adc	r19, r19
 118:	96 2f       	mov	r25, r22
 11a:	99 7f       	andi	r25, 0xF9	; 249
 11c:	49 2b       	or	r20, r25
 11e:	24 2b       	or	r18, r20
 120:	25 b9       	out	0x05, r18	; 5
 122:	68 b1       	in	r22, 0x08	; 8
 124:	98 2f       	mov	r25, r24
 126:	90 71       	andi	r25, 0x10	; 16
 128:	49 2f       	mov	r20, r25
 12a:	50 e0       	ldi	r21, 0x00	; 0
 12c:	55 95       	asr	r21
 12e:	47 95       	ror	r20
 130:	55 95       	asr	r21
 132:	47 95       	ror	r20
 134:	55 95       	asr	r21
 136:	47 95       	ror	r20
 138:	98 2f       	mov	r25, r24
 13a:	90 72       	andi	r25, 0x20	; 32
 13c:	29 2f       	mov	r18, r25
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	35 95       	asr	r19
 142:	27 95       	ror	r18
 144:	35 95       	asr	r19
 146:	27 95       	ror	r18
 148:	35 95       	asr	r19
 14a:	27 95       	ror	r18
 14c:	96 2f       	mov	r25, r22
 14e:	99 7f       	andi	r25, 0xF9	; 249
 150:	49 2b       	or	r20, r25
 152:	24 2b       	or	r18, r20
 154:	28 b9       	out	0x08, r18	; 8
 156:	9b b1       	in	r25, 0x0b	; 11
 158:	92 60       	ori	r25, 0x02	; 2
 15a:	9b b9       	out	0x0b, r25	; 11
 15c:	9b b1       	in	r25, 0x0b	; 11
 15e:	91 60       	ori	r25, 0x01	; 1
 160:	9b b9       	out	0x0b, r25	; 11
 162:	25 ed       	ldi	r18, 0xD5	; 213
 164:	2a 95       	dec	r18
 166:	f1 f7       	brne	.-4      	; 0x164 <LCDsendChar+0x7e>
 168:	00 00       	nop
 16a:	9b b1       	in	r25, 0x0b	; 11
 16c:	9e 7f       	andi	r25, 0xFE	; 254
 16e:	9b b9       	out	0x0b, r25	; 11
 170:	9b b1       	in	r25, 0x0b	; 11
 172:	9d 7f       	andi	r25, 0xFD	; 253
 174:	9b b9       	out	0x0b, r25	; 11
 176:	95 ed       	ldi	r25, 0xD5	; 213
 178:	9a 95       	dec	r25
 17a:	f1 f7       	brne	.-4      	; 0x178 <LCDsendChar+0x92>
 17c:	00 00       	nop
 17e:	65 b1       	in	r22, 0x05	; 5
 180:	20 e1       	ldi	r18, 0x10	; 16
 182:	82 9f       	mul	r24, r18
 184:	c0 01       	movw	r24, r0
 186:	11 24       	eor	r1, r1
 188:	ac 01       	movw	r20, r24
 18a:	40 74       	andi	r20, 0x40	; 64
 18c:	55 27       	eor	r21, r21
 18e:	55 95       	asr	r21
 190:	47 95       	ror	r20
 192:	55 95       	asr	r21
 194:	47 95       	ror	r20
 196:	55 95       	asr	r21
 198:	47 95       	ror	r20
 19a:	55 95       	asr	r21
 19c:	47 95       	ror	r20
 19e:	9c 01       	movw	r18, r24
 1a0:	20 78       	andi	r18, 0x80	; 128
 1a2:	33 27       	eor	r19, r19
 1a4:	02 2e       	mov	r0, r18
 1a6:	23 2f       	mov	r18, r19
 1a8:	00 0c       	add	r0, r0
 1aa:	22 1f       	adc	r18, r18
 1ac:	33 0b       	sbc	r19, r19
 1ae:	00 0c       	add	r0, r0
 1b0:	22 1f       	adc	r18, r18
 1b2:	33 1f       	adc	r19, r19
 1b4:	36 2f       	mov	r19, r22
 1b6:	39 7f       	andi	r19, 0xF9	; 249
 1b8:	43 2b       	or	r20, r19
 1ba:	24 2b       	or	r18, r20
 1bc:	25 b9       	out	0x05, r18	; 5
 1be:	48 b1       	in	r20, 0x08	; 8
 1c0:	9c 01       	movw	r18, r24
 1c2:	20 71       	andi	r18, 0x10	; 16
 1c4:	33 27       	eor	r19, r19
 1c6:	35 95       	asr	r19
 1c8:	27 95       	ror	r18
 1ca:	35 95       	asr	r19
 1cc:	27 95       	ror	r18
 1ce:	35 95       	asr	r19
 1d0:	27 95       	ror	r18
 1d2:	80 72       	andi	r24, 0x20	; 32
 1d4:	99 27       	eor	r25, r25
 1d6:	95 95       	asr	r25
 1d8:	87 95       	ror	r24
 1da:	95 95       	asr	r25
 1dc:	87 95       	ror	r24
 1de:	95 95       	asr	r25
 1e0:	87 95       	ror	r24
 1e2:	94 2f       	mov	r25, r20
 1e4:	99 7f       	andi	r25, 0xF9	; 249
 1e6:	29 2b       	or	r18, r25
 1e8:	82 2b       	or	r24, r18
 1ea:	88 b9       	out	0x08, r24	; 8
 1ec:	8b b1       	in	r24, 0x0b	; 11
 1ee:	82 60       	ori	r24, 0x02	; 2
 1f0:	8b b9       	out	0x0b, r24	; 11
 1f2:	8b b1       	in	r24, 0x0b	; 11
 1f4:	81 60       	ori	r24, 0x01	; 1
 1f6:	8b b9       	out	0x0b, r24	; 11
 1f8:	85 ed       	ldi	r24, 0xD5	; 213
 1fa:	8a 95       	dec	r24
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <LCDsendChar+0x114>
 1fe:	00 00       	nop
 200:	8b b1       	in	r24, 0x0b	; 11
 202:	8e 7f       	andi	r24, 0xFE	; 254
 204:	8b b9       	out	0x0b, r24	; 11
 206:	8b b1       	in	r24, 0x0b	; 11
 208:	8d 7f       	andi	r24, 0xFD	; 253
 20a:	8b b9       	out	0x0b, r24	; 11
 20c:	95 ed       	ldi	r25, 0xD5	; 213
 20e:	9a 95       	dec	r25
 210:	f1 f7       	brne	.-4      	; 0x20e <LCDsendChar+0x128>
 212:	00 00       	nop
 214:	08 95       	ret

00000216 <LCDsendCommand>:
 216:	65 b1       	in	r22, 0x05	; 5
 218:	98 2f       	mov	r25, r24
 21a:	90 74       	andi	r25, 0x40	; 64
 21c:	49 2f       	mov	r20, r25
 21e:	50 e0       	ldi	r21, 0x00	; 0
 220:	55 95       	asr	r21
 222:	47 95       	ror	r20
 224:	55 95       	asr	r21
 226:	47 95       	ror	r20
 228:	55 95       	asr	r21
 22a:	47 95       	ror	r20
 22c:	55 95       	asr	r21
 22e:	47 95       	ror	r20
 230:	98 2f       	mov	r25, r24
 232:	90 78       	andi	r25, 0x80	; 128
 234:	29 2f       	mov	r18, r25
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	02 2e       	mov	r0, r18
 23a:	23 2f       	mov	r18, r19
 23c:	00 0c       	add	r0, r0
 23e:	22 1f       	adc	r18, r18
 240:	33 0b       	sbc	r19, r19
 242:	00 0c       	add	r0, r0
 244:	22 1f       	adc	r18, r18
 246:	33 1f       	adc	r19, r19
 248:	96 2f       	mov	r25, r22
 24a:	99 7f       	andi	r25, 0xF9	; 249
 24c:	49 2b       	or	r20, r25
 24e:	24 2b       	or	r18, r20
 250:	25 b9       	out	0x05, r18	; 5
 252:	68 b1       	in	r22, 0x08	; 8
 254:	98 2f       	mov	r25, r24
 256:	90 71       	andi	r25, 0x10	; 16
 258:	49 2f       	mov	r20, r25
 25a:	50 e0       	ldi	r21, 0x00	; 0
 25c:	55 95       	asr	r21
 25e:	47 95       	ror	r20
 260:	55 95       	asr	r21
 262:	47 95       	ror	r20
 264:	55 95       	asr	r21
 266:	47 95       	ror	r20
 268:	98 2f       	mov	r25, r24
 26a:	90 72       	andi	r25, 0x20	; 32
 26c:	29 2f       	mov	r18, r25
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	35 95       	asr	r19
 272:	27 95       	ror	r18
 274:	35 95       	asr	r19
 276:	27 95       	ror	r18
 278:	35 95       	asr	r19
 27a:	27 95       	ror	r18
 27c:	96 2f       	mov	r25, r22
 27e:	99 7f       	andi	r25, 0xF9	; 249
 280:	49 2b       	or	r20, r25
 282:	24 2b       	or	r18, r20
 284:	28 b9       	out	0x08, r18	; 8
 286:	9b b1       	in	r25, 0x0b	; 11
 288:	91 60       	ori	r25, 0x01	; 1
 28a:	9b b9       	out	0x0b, r25	; 11
 28c:	ef e9       	ldi	r30, 0x9F	; 159
 28e:	ff e0       	ldi	r31, 0x0F	; 15
 290:	31 97       	sbiw	r30, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <LCDsendCommand+0x7a>
 294:	00 c0       	rjmp	.+0      	; 0x296 <LCDsendCommand+0x80>
 296:	00 00       	nop
 298:	9b b1       	in	r25, 0x0b	; 11
 29a:	9e 7f       	andi	r25, 0xFE	; 254
 29c:	9b b9       	out	0x0b, r25	; 11
 29e:	ef e9       	ldi	r30, 0x9F	; 159
 2a0:	ff e0       	ldi	r31, 0x0F	; 15
 2a2:	31 97       	sbiw	r30, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <LCDsendCommand+0x8c>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <LCDsendCommand+0x92>
 2a8:	00 00       	nop
 2aa:	65 b1       	in	r22, 0x05	; 5
 2ac:	f0 e1       	ldi	r31, 0x10	; 16
 2ae:	8f 9f       	mul	r24, r31
 2b0:	c0 01       	movw	r24, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	ac 01       	movw	r20, r24
 2b6:	40 74       	andi	r20, 0x40	; 64
 2b8:	55 27       	eor	r21, r21
 2ba:	55 95       	asr	r21
 2bc:	47 95       	ror	r20
 2be:	55 95       	asr	r21
 2c0:	47 95       	ror	r20
 2c2:	55 95       	asr	r21
 2c4:	47 95       	ror	r20
 2c6:	55 95       	asr	r21
 2c8:	47 95       	ror	r20
 2ca:	9c 01       	movw	r18, r24
 2cc:	20 78       	andi	r18, 0x80	; 128
 2ce:	33 27       	eor	r19, r19
 2d0:	02 2e       	mov	r0, r18
 2d2:	23 2f       	mov	r18, r19
 2d4:	00 0c       	add	r0, r0
 2d6:	22 1f       	adc	r18, r18
 2d8:	33 0b       	sbc	r19, r19
 2da:	00 0c       	add	r0, r0
 2dc:	22 1f       	adc	r18, r18
 2de:	33 1f       	adc	r19, r19
 2e0:	36 2f       	mov	r19, r22
 2e2:	39 7f       	andi	r19, 0xF9	; 249
 2e4:	43 2b       	or	r20, r19
 2e6:	24 2b       	or	r18, r20
 2e8:	25 b9       	out	0x05, r18	; 5
 2ea:	48 b1       	in	r20, 0x08	; 8
 2ec:	9c 01       	movw	r18, r24
 2ee:	20 71       	andi	r18, 0x10	; 16
 2f0:	33 27       	eor	r19, r19
 2f2:	35 95       	asr	r19
 2f4:	27 95       	ror	r18
 2f6:	35 95       	asr	r19
 2f8:	27 95       	ror	r18
 2fa:	35 95       	asr	r19
 2fc:	27 95       	ror	r18
 2fe:	80 72       	andi	r24, 0x20	; 32
 300:	99 27       	eor	r25, r25
 302:	95 95       	asr	r25
 304:	87 95       	ror	r24
 306:	95 95       	asr	r25
 308:	87 95       	ror	r24
 30a:	95 95       	asr	r25
 30c:	87 95       	ror	r24
 30e:	94 2f       	mov	r25, r20
 310:	99 7f       	andi	r25, 0xF9	; 249
 312:	29 2b       	or	r18, r25
 314:	82 2b       	or	r24, r18
 316:	88 b9       	out	0x08, r24	; 8
 318:	8b b1       	in	r24, 0x0b	; 11
 31a:	81 60       	ori	r24, 0x01	; 1
 31c:	8b b9       	out	0x0b, r24	; 11
 31e:	8f e9       	ldi	r24, 0x9F	; 159
 320:	9f e0       	ldi	r25, 0x0F	; 15
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	f1 f7       	brne	.-4      	; 0x322 <LCDsendCommand+0x10c>
 326:	00 c0       	rjmp	.+0      	; 0x328 <LCDsendCommand+0x112>
 328:	00 00       	nop
 32a:	8b b1       	in	r24, 0x0b	; 11
 32c:	8e 7f       	andi	r24, 0xFE	; 254
 32e:	8b b9       	out	0x0b, r24	; 11
 330:	ef e9       	ldi	r30, 0x9F	; 159
 332:	ff e0       	ldi	r31, 0x0F	; 15
 334:	31 97       	sbiw	r30, 0x01	; 1
 336:	f1 f7       	brne	.-4      	; 0x334 <LCDsendCommand+0x11e>
 338:	00 c0       	rjmp	.+0      	; 0x33a <LCDsendCommand+0x124>
 33a:	00 00       	nop
 33c:	08 95       	ret

0000033e <LCDclr>:
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	0e 94 0b 01 	call	0x216	; 0x216 <LCDsendCommand>
 344:	08 95       	ret

00000346 <LCDhome>:
 346:	82 e0       	ldi	r24, 0x02	; 2
 348:	0e 94 0b 01 	call	0x216	; 0x216 <LCDsendCommand>
 34c:	08 95       	ret

0000034e <LCDdefinechar>:
 34e:	ef 92       	push	r14
 350:	ff 92       	push	r15
 352:	0f 93       	push	r16
 354:	1f 93       	push	r17
 356:	cf 93       	push	r28
 358:	df 93       	push	r29
 35a:	7c 01       	movw	r14, r24
 35c:	86 2f       	mov	r24, r22
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	88 0f       	add	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	88 0f       	add	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	80 64       	ori	r24, 0x40	; 64
 36e:	c0 e0       	ldi	r28, 0x00	; 0
 370:	d0 e0       	ldi	r29, 0x00	; 0
 372:	0d c0       	rjmp	.+26     	; 0x38e <LCDdefinechar+0x40>
 374:	f7 01       	movw	r30, r14
 376:	ec 0f       	add	r30, r28
 378:	fd 1f       	adc	r31, r29
 37a:	14 91       	lpm	r17, Z
 37c:	01 e0       	ldi	r16, 0x01	; 1
 37e:	08 0f       	add	r16, r24
 380:	0e 94 0b 01 	call	0x216	; 0x216 <LCDsendCommand>
 384:	81 2f       	mov	r24, r17
 386:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDsendChar>
 38a:	21 96       	adiw	r28, 0x01	; 1
 38c:	80 2f       	mov	r24, r16
 38e:	c8 30       	cpi	r28, 0x08	; 8
 390:	d1 05       	cpc	r29, r1
 392:	80 f3       	brcs	.-32     	; 0x374 <LCDdefinechar+0x26>
 394:	df 91       	pop	r29
 396:	cf 91       	pop	r28
 398:	1f 91       	pop	r17
 39a:	0f 91       	pop	r16
 39c:	ff 90       	pop	r15
 39e:	ef 90       	pop	r14
 3a0:	08 95       	ret

000003a2 <LCDinit>:
 3a2:	cf 93       	push	r28
 3a4:	df 93       	push	r29
 3a6:	8f e5       	ldi	r24, 0x5F	; 95
 3a8:	9a ee       	ldi	r25, 0xEA	; 234
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <LCDinit+0x8>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <LCDinit+0xe>
 3b0:	00 00       	nop
 3b2:	85 b1       	in	r24, 0x05	; 5
 3b4:	89 7f       	andi	r24, 0xF9	; 249
 3b6:	85 b9       	out	0x05, r24	; 5
 3b8:	88 b1       	in	r24, 0x08	; 8
 3ba:	89 7f       	andi	r24, 0xF9	; 249
 3bc:	88 b9       	out	0x08, r24	; 8
 3be:	1b b8       	out	0x0b, r1	; 11
 3c0:	87 b1       	in	r24, 0x07	; 7
 3c2:	86 60       	ori	r24, 0x06	; 6
 3c4:	87 b9       	out	0x07, r24	; 7
 3c6:	84 b1       	in	r24, 0x04	; 4
 3c8:	86 60       	ori	r24, 0x06	; 6
 3ca:	84 b9       	out	0x04, r24	; 4
 3cc:	84 b1       	in	r24, 0x04	; 4
 3ce:	86 60       	ori	r24, 0x06	; 6
 3d0:	84 b9       	out	0x04, r24	; 4
 3d2:	87 b1       	in	r24, 0x07	; 7
 3d4:	86 60       	ori	r24, 0x06	; 6
 3d6:	87 b9       	out	0x07, r24	; 7
 3d8:	8a b1       	in	r24, 0x0a	; 10
 3da:	83 60       	ori	r24, 0x03	; 3
 3dc:	8a b9       	out	0x0a, r24	; 10
 3de:	85 b1       	in	r24, 0x05	; 5
 3e0:	89 7f       	andi	r24, 0xF9	; 249
 3e2:	85 b9       	out	0x05, r24	; 5
 3e4:	88 b1       	in	r24, 0x08	; 8
 3e6:	86 60       	ori	r24, 0x06	; 6
 3e8:	88 b9       	out	0x08, r24	; 8
 3ea:	8b b1       	in	r24, 0x0b	; 11
 3ec:	81 60       	ori	r24, 0x01	; 1
 3ee:	8b b9       	out	0x0b, r24	; 11
 3f0:	8f e9       	ldi	r24, 0x9F	; 159
 3f2:	9f e0       	ldi	r25, 0x0F	; 15
 3f4:	01 97       	sbiw	r24, 0x01	; 1
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <LCDinit+0x52>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <LCDinit+0x58>
 3fa:	00 00       	nop
 3fc:	8b b1       	in	r24, 0x0b	; 11
 3fe:	8e 7f       	andi	r24, 0xFE	; 254
 400:	8b b9       	out	0x0b, r24	; 11
 402:	8f e9       	ldi	r24, 0x9F	; 159
 404:	9f e0       	ldi	r25, 0x0F	; 15
 406:	01 97       	sbiw	r24, 0x01	; 1
 408:	f1 f7       	brne	.-4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40a:	00 c0       	rjmp	.+0      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 40c:	00 00       	nop
 40e:	85 b1       	in	r24, 0x05	; 5
 410:	89 7f       	andi	r24, 0xF9	; 249
 412:	85 b9       	out	0x05, r24	; 5
 414:	88 b1       	in	r24, 0x08	; 8
 416:	86 60       	ori	r24, 0x06	; 6
 418:	88 b9       	out	0x08, r24	; 8
 41a:	8b b1       	in	r24, 0x0b	; 11
 41c:	81 60       	ori	r24, 0x01	; 1
 41e:	8b b9       	out	0x0b, r24	; 11
 420:	8f e9       	ldi	r24, 0x9F	; 159
 422:	9f e0       	ldi	r25, 0x0F	; 15
 424:	01 97       	sbiw	r24, 0x01	; 1
 426:	f1 f7       	brne	.-4      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 428:	00 c0       	rjmp	.+0      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 42a:	00 00       	nop
 42c:	8b b1       	in	r24, 0x0b	; 11
 42e:	8e 7f       	andi	r24, 0xFE	; 254
 430:	8b b9       	out	0x0b, r24	; 11
 432:	8f e9       	ldi	r24, 0x9F	; 159
 434:	9f e0       	ldi	r25, 0x0F	; 15
 436:	01 97       	sbiw	r24, 0x01	; 1
 438:	f1 f7       	brne	.-4      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43a:	00 c0       	rjmp	.+0      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 43c:	00 00       	nop
 43e:	85 b1       	in	r24, 0x05	; 5
 440:	89 7f       	andi	r24, 0xF9	; 249
 442:	85 b9       	out	0x05, r24	; 5
 444:	88 b1       	in	r24, 0x08	; 8
 446:	89 7f       	andi	r24, 0xF9	; 249
 448:	84 60       	ori	r24, 0x04	; 4
 44a:	88 b9       	out	0x08, r24	; 8
 44c:	8b b1       	in	r24, 0x0b	; 11
 44e:	81 60       	ori	r24, 0x01	; 1
 450:	8b b9       	out	0x0b, r24	; 11
 452:	8f e9       	ldi	r24, 0x9F	; 159
 454:	9f e0       	ldi	r25, 0x0F	; 15
 456:	01 97       	sbiw	r24, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 45c:	00 00       	nop
 45e:	8b b1       	in	r24, 0x0b	; 11
 460:	8e 7f       	andi	r24, 0xFE	; 254
 462:	8b b9       	out	0x0b, r24	; 11
 464:	8f e9       	ldi	r24, 0x9F	; 159
 466:	9f e0       	ldi	r25, 0x0F	; 15
 468:	01 97       	sbiw	r24, 0x01	; 1
 46a:	f1 f7       	brne	.-4      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 46e:	00 00       	nop
 470:	88 e2       	ldi	r24, 0x28	; 40
 472:	0e 94 0b 01 	call	0x216	; 0x216 <LCDsendCommand>
 476:	8c e0       	ldi	r24, 0x0C	; 12
 478:	0e 94 0b 01 	call	0x216	; 0x216 <LCDsendCommand>
 47c:	60 e0       	ldi	r22, 0x00	; 0
 47e:	c0 e0       	ldi	r28, 0x00	; 0
 480:	0a c0       	rjmp	.+20     	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 482:	d1 e0       	ldi	r29, 0x01	; 1
 484:	d6 0f       	add	r29, r22
 486:	8c 2f       	mov	r24, r28
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	88 59       	subi	r24, 0x98	; 152
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	0e 94 a7 01 	call	0x34e	; 0x34e <LCDdefinechar>
 492:	c8 5f       	subi	r28, 0xF8	; 248
 494:	6d 2f       	mov	r22, r29
 496:	c0 34       	cpi	r28, 0x40	; 64
 498:	a0 f3       	brcs	.-24     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 49a:	df 91       	pop	r29
 49c:	cf 91       	pop	r28
 49e:	08 95       	ret

000004a0 <LCDcursorOnBlink>:
}
void LCDcursorOnBlink(void)	//displays LCD blinking cursor
{
	LCDsendCommand(0x0F);
 4a0:	8f e0       	ldi	r24, 0x0F	; 15
 4a2:	0e 94 0b 01 	call	0x216	; 0x216 <LCDsendCommand>
 4a6:	08 95       	ret

000004a8 <main>:

int main(void)
{
    /* Replace with your application code */
    uint8_t key=0x00;
	LCDinit();
 4a8:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <LCDinit>
	LCDclr();
 4ac:	0e 94 9f 01 	call	0x33e	; 0x33e <LCDclr>
	//setup();
	LCDhome();
 4b0:	0e 94 a3 01 	call	0x346	; 0x346 <LCDhome>
	LCDsendChar('a');
 4b4:	81 e6       	ldi	r24, 0x61	; 97
 4b6:	0e 94 73 00 	call	0xe6	; 0xe6 <LCDsendChar>
	LCDcursorOnBlink();
 4ba:	0e 94 50 02 	call	0x4a0	; 0x4a0 <LCDcursorOnBlink>
 4be:	ff cf       	rjmp	.-2      	; 0x4be <main+0x16>

000004c0 <_exit>:
 4c0:	f8 94       	cli

000004c2 <__stop_program>:
 4c2:	ff cf       	rjmp	.-2      	; 0x4c2 <__stop_program>
